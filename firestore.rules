rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if the user owns the document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Rules for notes collection
    match /notes/{noteId} {
      // Allow read if the user owns the note
      allow read: if isOwner(resource.data.userId);
      
      // Allow create if user is authenticated and sets themselves as owner
      allow create: if isAuthenticated() 
        && request.resource.data.userId == request.auth.uid
        && request.resource.data.content is string
        && request.resource.data.createdAt is timestamp
        && request.resource.data.updatedAt is timestamp;
      
      // Allow update if user owns the note and isn't changing ownership
      allow update: if isOwner(resource.data.userId)
        && request.resource.data.userId == resource.data.userId
        && request.resource.data.content is string
        && request.resource.data.updatedAt is timestamp;
      
      // Allow delete if user owns the note
      allow delete: if isOwner(resource.data.userId);
    }
  }
}